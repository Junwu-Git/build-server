name: Docker Image CI

on:
  push:
    branches:
      - 'main' # main 分支推送代码时触发 (主要用于更新工作流文件本身，或后续合并到 main 的提交)
      - 'test' # test 分支推送代码时触发 (用于测试镜像发布)
    tags:
      - 'v*.*.*' # Git Tag 推送时触发 (用于正式版本发布)
  workflow_dispatch: # 手动触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download and extract camoufox dependency
        run: |
          wget https://github.com/daijro/camoufox/releases/download/v135.0.1-beta.24/camoufox-135.0.1-beta.24-lin.x86_64.zip
          unzip camoufox-135.0.1-beta.24-lin.x86_64.zip -d camoufox-linux
          
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          # 关键修正：动态生成标签的逻辑，确保 enable 属性语法正确，并修正缩进
          tags: |
            type=semver,pattern={{version}},enable=${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=main,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=raw,value=test,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/test' }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          provenance: false
          sbom: false
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max